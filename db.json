{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/upload/avatar.gif","path":"upload/avatar.gif","modified":0,"renderable":0},{"_id":"themes/hexo-theme-next-master/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/css/noscript.styl","path":"css/noscript.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/comments.js","path":"js/comments.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/config.js","path":"js/config.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/addtoany.js","path":"js/third-party/addtoany.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/analytics/matomo.js","path":"js/third-party/analytics/matomo.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/third-party/tags/wavedrom.js","path":"js/third-party/tags/wavedrom.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/C++test.nd.md","hash":"78629a0ee5ae559a2d2a214f3ae964972f3ead1d","modified":1711275420510},{"_id":"source/_posts/hello-world.md","hash":"32f6dc182d32b4d650ddafd13bee14b1f4f10b0c","modified":1711275464264},{"_id":"source/tags/index.md","hash":"0758f794fb8a8119543bd58bb95d0e32091566d5","modified":1711099211055},{"_id":"source/upload/avatar.gif","hash":"2a5c54d54e5006e4179a9036e8e06c03e7afcbe6","modified":1711286030627},{"_id":"source/upload/index.md","hash":"de2409aa14b62b2d3d01dcd0685bf1a3cf273779","modified":1711288403570},{"_id":"source/tags2/index.md","hash":"665a989896de61e3bf57d7eefe456f6977d4e9b0","modified":1711099301919},{"_id":"themes/hexo-theme-next-master/.eslintrc.json","hash":"9c0762486f24a8c5e60f8b6c875e4c4728942649","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.gitignore","hash":"417520c4dbbeab9c7e3ab10d944da0886366a0ee","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.gitattributes","hash":"ec43734985e1cafd53d88ded3020103f7416123c","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.stylelintrc","hash":"9346cca6a24256a79f433670da634e8329f9a2a9","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/_vendors.yml","hash":"7f22d93ab17a2aa066d0e1a10dc346fca8eac11d","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/README.md","hash":"d6820f46d03a93bd6dc8b10f49f58aec82ad2b06","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/_config.yml","hash":"06c057d403ce5f33e7f4d16e8b6a373ed876a30e","modified":1711286164510},{"_id":"themes/hexo-theme-next-master/renovate.json","hash":"cb29cc16e61b0b8a6dac34657d76822ae29ad5aa","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/package.json","hash":"a79b260237bcd13f8892f17261941a3ddd115745","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.githooks/install.js","hash":"0977cb57c8b91ea166b5bbc481e4ddeaf77e9b18","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/CODE_OF_CONDUCT.md","hash":"e78ec4eb6ce49a44ec321c49424ee0a0c1846537","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.githooks/pre-commit","hash":"f473eac1aaaa96c947d67988bbed140bbab1a821","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/CONTRIBUTING.md","hash":"330656d93b6c03df9fb1f2f0e3534c971969473b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/PULL_REQUEST_TEMPLATE.md","hash":"fa76760856429b6421abc54e63b2d3c815372900","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/label-commenter-config.yml","hash":"5fd78aaaf3e6bb4811abde0cc5d75a3174ce4882","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/config.yml","hash":"7984e665e9de481a0e0e51fca5668337713f810b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/labeler.yml","hash":"b7f67daa031c535940be82ea96f0fb9db59e1022","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/release.yml","hash":"112310b81f959747f8eaafc2ca2150e1dcf916d8","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/category.njk","hash":"c68b7343d0f8145010f93351908cc36ef6212ec1","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_layout.njk","hash":"fc0a45112f2dcfc2642404e8934ea32a793c3bd7","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/index.njk","hash":"dd63e488ae8cc144335a5958acedf6a16edd7a92","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/page.njk","hash":"b0660b2af0ac7d3fda14ca4d9f2c9e79ef06c6f9","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/ar.yml","hash":"7d0f39e8684284a04bb9808521c87fecda8bd131","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/de.yml","hash":"79b37df731c29665dee6cd7c90d278e1edfb6e24","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/tag.njk","hash":"9e16ba20c28a7f2c6bc75aa427f48122301a30aa","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/post.njk","hash":"0bfce9f133f501a9a4837257e3b862b3bbca15be","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/bn.yml","hash":"564bed75da6e05b11dce6164508f97a15e2fb6c2","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/es.yml","hash":"dffc63ef42e1266b88e0acf08994fd17a9908d53","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/en.yml","hash":"ba0fd79a2b1d8db01a034180556061745965ff05","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/eo.yml","hash":"e34bb33ae827bf2f0727088599a73bc64bdad1b0","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/fa.yml","hash":"f3ffc444599f4ac92d62e9ed00a1490ebc277d70","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/fr.yml","hash":"8ac44e58f71a38b7697a2f7f98a6971ed818cb5b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/id.yml","hash":"929df147f4f17d638b07de5fe52ca13e2549ab1c","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/it.yml","hash":"16d716ecfd748def2f6486ef5a82d0ab7ceb4890","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/ja.yml","hash":"543222bfc516aab6c33e8534f807972ecb8943a9","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/ko.yml","hash":"d345a303310c8a5f4836c3683f3580f861ebd1b4","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/nl.yml","hash":"3cb3687696635ec71b4ca40c5fc43b56acc8843e","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/pt-BR.yml","hash":"76b8576ce228d540a16b1f0af5af2cce20923194","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/pt.yml","hash":"70de366e10ea584ba039d40d6b35ac97f93454ad","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/ru.yml","hash":"c6d8de0ff7d8148d09993257cfd3b7aca755696c","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/si.yml","hash":"2d712eedf3f60d04d36c3108cf5a12e2a52e875c","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/th.yml","hash":"6829e998b39f8f143e20b276bb1f62d95a29de58","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/tk.yml","hash":"511726054873f6f8d7ce0d2e803f6731de0ddbe7","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/tr.yml","hash":"a57e4ed089b893a95f5e1ecff17ce625165f4d46","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/uk.yml","hash":"ff537047b4b4c3ca9a7b64fa7f428a9942751eeb","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/vi.yml","hash":"7ebcba5e1128784195e4681dffc9d34c4e873fec","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/zh-CN.yml","hash":"741d7efe0262c9cdc2c648014b55599665d90f6b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/zh-HK.yml","hash":"88ea50eeb9097ab4a87a44981a102d8594feb064","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/ISSUE_TEMPLATE/bug-report.yml","hash":"3f19cbf0c2b2fee6bf3788870b842c9ccc1425ca","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/index.js","hash":"6bf0289846538be3e9a63809af98f00e1fbdd90b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/languages/zh-TW.yml","hash":"4695c87d6b81b3a23d16ad6513d9eaa925f8d8ad","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/ISSUE_TEMPLATE/config.yml","hash":"c40ae7903b6cc99f94c9d45ac7ba8c2850bb1309","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/ISSUE_TEMPLATE/feature-request.yml","hash":"fbc3062cd4591c8329fab9db72803746f0d11920","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/workflows/codeql.yml","hash":"70a8975c47f4334ebcdd4e543b940346940054d6","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/workflows/label-commenter.yml","hash":"44eb8b9706b31a4917cacddde2b3aca4ff82955b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/ISSUE_TEMPLATE/other.yml","hash":"10eca518b91a19984f6a5a912d41222042f61d63","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/workflows/labeler.yml","hash":"48e6e1e1406705379112766f4fd8388e1c53b281","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/docs/ru/README.md","hash":"29c89a41b371f893e56c87ea61adabc444ec58cc","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/workflows/tester.yml","hash":"5cf17546afd6be2371b46e72f3901045d4ad803e","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/workflows/lock.yml","hash":"275650a678684523f37187d0532f96aa0f49ce00","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_macro/post-collapse.njk","hash":"abda600685ee972e1f6b7a2dcc56f13e2daa6263","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/.github/workflows/linter.yml","hash":"1d3d8fe53e9350e35d8349a19f65664789665e54","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_macro/sidebar.njk","hash":"547c62ab14d9e05d2d9116db9048a677fbe1fb6d","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_macro/post.njk","hash":"65e9112fb7eb26d2880db624554a99aca028140b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/comments.njk","hash":"d0c470b0f6690aa217e9ada848c5e2e73fb27c6f","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/footer.njk","hash":"fbf8232cacf0df87e88e74860be66c9f86018302","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/index.njk","hash":"6668878a0f9a1166c6a879755f54a08d942da870","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/pagination.njk","hash":"bc719473ed5948ab6859449d60b8d36cfc1542b4","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/widgets.njk","hash":"e7f988ecddb2159313699a00827a45eca5622bd4","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/index.njk","hash":"dfd7cdd6ba89f8c3deabc27726c7a350cadafd11","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/addtoany.njk","hash":"ef64c6bfb8540cd874701236b9be47db2496e98e","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/fancybox.njk","hash":"844559f46e2ff1c8be234d5763703106e2072a7b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/pace.njk","hash":"d7ad5714079f7f65446f880baf14722435ca9061","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/CONTRIBUTING.md","hash":"a089f7a8368ab0b7d7b9b7ec0ac3767a453435df","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"12a6631617695504d5cf2a94b57d87bd331bef6f","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/README.md","hash":"12a3e96581964a22b474cc739675d52ef93ff932","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/events/index.js","hash":"bd9ea82376cd87df611ea3ae077875c7c595a3df","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/filters/locals.js","hash":"9eb5310664759931287dd28ea39165dfb67f12ed","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/helpers/engine.js","hash":"d292b78485e8e8055712b0ed6de7cf559c5fbdcd","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/filters/post.js","hash":"fdc8a0af90035e89c3fcb754a0eb189b8951a2bc","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/filters/minify.js","hash":"447db39d17775b2bd18d8af9c9d65b7b8449f751","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/helpers/navigation.js","hash":"78107021101553c3d23e89290f7530b60cf4aa86","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/helpers/next-config.js","hash":"ce6bd4054653a4066b19869819a17b568eeee915","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/helpers/next-paginator.js","hash":"e86c764b546e4fbb87970cabc4135a56f9ef9fe1","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/helpers/next-url.js","hash":"6281d47c1de98eb38f3aa0f6df29bbb19d412173","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/helpers/next-vendors.js","hash":"af3946a595f997eb43d9af87428e4898c9acbc82","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/tags/group-pictures.js","hash":"9ed799c329abf830f623689d7e136991256a24ca","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/tags/index.js","hash":"1f6aba7820f1fb58b61969485148db21846e1aa9","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_colors.styl","hash":"3c6798c10cc220d83481cb3f3782e78558cee789","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_mixins.styl","hash":"83647a6207333b9609ba90b0946b3fa9548e6381","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/tags/wavedrom.js","hash":"b44dfeeb58b41945d469141787f3dbce4b117d08","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/main.styl","hash":"921a58577f411cf4eb5cfd66db0a241f8f88578c","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/noscript.styl","hash":"dadc81256afb127b77eac6763d5ee0ec9c77f0a3","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/images/avatar.gif","hash":"2a5c54d54e5006e4179a9036e8e06c03e7afcbe6","modified":1711286030627},{"_id":"themes/hexo-theme-next-master/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/motion.js","hash":"770d63c26f22705311028a36b52e999cc8a2da82","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/next-boot.js","hash":"745bd828205da7e5fbd3f860cc3697097630f5f3","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/pjax.js","hash":"b03ba78c6916ad2f390d55bc1bc18fafb64b0ebf","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/utils.js","hash":"5d67bfebae41ec947b9b83be2ff63488580c31ed","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/helpers/font.js","hash":"342ef3c6fd2dcca2a8802a516ed6d7f389fd2ca2","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/helpers/index.js","hash":"63ba28afed697f7b3574436b1133b8ecc9c0c357","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/tags/button.js","hash":"48f2aa4c513e9e24bd6a811410520b74cd7ea88b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/helpers/next-url.js","hash":"90092dc7e78100bc1ebd1f8ffe4d1543f48e76a8","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/tags/caniuse.js","hash":"aa5e728445caeaf7c2ccd0f3fcb2cad0c93ca6d1","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/tags/group-pictures.js","hash":"5c68ae0184f9da6e00ba199f2554d503d8e6da71","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/tags/center-quote.js","hash":"7667342fd1a1417eaf6a254012b84ae40e8d13dd","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/tags/index.js","hash":"e8779e54f0979b221858f8bb74dd081bb503b910","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/tags/label.js","hash":"4ebf3698c258ca978b997acbdd0dece44069c09d","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/tags/link-grid.js","hash":"43d298fafb7c45a874b766d443843bd26346e689","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/tags/note.js","hash":"3dcfcd65bf9f326972ea7571fdb1444200f5d07e","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/tags/mermaid.js","hash":"ab77be5f3c6d9a57c7b9dda6decf1906a736fef9","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/tags/pdf.js","hash":"fd6ea5123560a90f7e7c1eface23dbe1455db25f","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/validate/index.js","hash":"5a95ccc8598667535bd022e988055c0e019f3670","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/tags/tabs.js","hash":"d63722919f9da2e44d6b952801e10a2915ea9c12","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/head/head-unique.njk","hash":"8da52a144060db1a0a088ccb2e6cc8376d1fce70","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/header/brand.njk","hash":"dd9c4c03e99dfde0dfb8edefcb2c933f2f560efc","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/head/head.njk","hash":"5388b157bba4a40b9312f4a45c6678974ccf0837","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/test/tags/video.js","hash":"b796fc4dceb20a30e730c322bb5474c0162464cc","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/header/index.njk","hash":"650de421a8ce4cf685428ffbe0087ff84cbd1356","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/page/breadcrumb.njk","hash":"89825e75cc45e9709fa6ba89883669eedaff6f46","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/header/menu.njk","hash":"ee6fc2f111572d3eeab0a2fecbb2d6b3e37ab26b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/header/menu-item.njk","hash":"41a8b0cc16f60fa085cb719d07216d86b6bc4bf8","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/header/sub-menu.njk","hash":"06480d8ec5f0b87eafd47f082f07968d7282dd5c","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post/post-copyright.njk","hash":"bfff923526d6800218f08dba6ce0bbf5c17755fd","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/page/schedule.njk","hash":"0f4bc8e257da60f77c0c1738607b2bde55810684","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post/post-followme.njk","hash":"c1e33b4889f75acc490af3c8bde0ec56c518ff41","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post/post-meta.njk","hash":"9fa47e4fb342811da590ee4adc91cf81118c0a39","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post/post-related.njk","hash":"e0986db00a0201dd3c60570f964829c84ba5bc68","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post/post-reward.njk","hash":"e8b8a7c41e9ec612d0c0c73419529d55d1c16256","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/sidebar/site-overview.njk","hash":"bc5708e38b6070dff0cab6bf9480971017ce4dda","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/cloudflare.njk","hash":"a5b8297c2c383124dd6a56e256ecc0c0dcf489be","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post/post-share.njk","hash":"16696990e4ce65fc8db18c4635082a5d5d06ff07","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/index.njk","hash":"f900306497b133e8b098bd9f4b96b93d1d96c185","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/matomo.njk","hash":"4e89648a8ec8194c5823064cbca39c938a799006","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/microsoft-clarity.njk","hash":"9dc00fcb0a05899f048eace9f9160b78956655d5","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/plausible.njk","hash":"ef9f2bb7110507f1c4336800af9157d5fa9765bd","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/umami.njk","hash":"3343750682fbd8535e50f8129be3003ad26015b4","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/math/katex.njk","hash":"1ebf658690468ea197bdd0416eb7cfa4bd0b083a","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/search/localsearch.njk","hash":"e45ea3542cdc9ed7ec8447b5e6f35df4c5e82758","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/tags/wavedrom.njk","hash":"02202bf563fb5eedde2ccad4d6c5b9109d30a703","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/events/lib/highlight.js","hash":"8300553bf2a1c4bfaec76f2da56465016e9d8058","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/events/lib/config.js","hash":"9ec51eb61f7fee612ffc5252f489003a0fa301fc","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/changyan.js","hash":"5798cfc8f63665031dd3e01debed051628cec319","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/events/lib/utils.js","hash":"6853e5433e3eaa19ea43fa20b08d956ba4cec4ac","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/common.js","hash":"19a402a225c31edffc50f202a14e0d582d3db23e","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/events/lib/vendors.js","hash":"464db1e7182e5b9cdbd32e8b5368d5e683b1d9c7","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/events/lib/navigation.js","hash":"dd3562686d95a50375e6fd32e717ccb0d99c1e3d","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/disqusjs.js","hash":"a600a98e7436edeb31e291abca359885567df3c9","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_variables/Mist.styl","hash":"a1418c9dc8c0f1a0ad4ded0f4627c45bf0db1a10","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/addtoany.js","hash":"5276c8f78ee562a8965216dc67d762e59cb4a9f2","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_variables/Pisces.styl","hash":"48f4f277946a168d0db1ea02804e85c22ca2c7db","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_variables/base.styl","hash":"c4fc4e862d09221265ab1466085f057be2ad2e4d","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/fancybox.js","hash":"819f382c561fe5ec23c67cc5fabd63dd1cc22dc1","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/schemes/muse.js","hash":"ba7ba2c129d1f240c6a22cec3e53f3f22af64b6b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/back-to-top.styl","hash":"7664491542046df9a3887cf40a06e00c0b4086a9","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/base.styl","hash":"d0a7c99095f490b0d2ed6b1be43d435960798cec","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/index.styl","hash":"2298e521253b3bf376a2412271bc2a7d305051f3","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/reading-progress.styl","hash":"90a86045a33c1bae49fc2f6fa1e1b53170c7f77b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/index.styl","hash":"8e34df131830d4fa3725e4590a672ba1cf1903e5","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/mobile.styl","hash":"1dbf2c339adcd27026c3a2ded32ee91ce08cea26","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/pagination.styl","hash":"f4228c759db4a650c8d38745c2edd1dc83c45687","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_header.styl","hash":"dafc6d23c80d6fe3e55a7711e94210d2479b629a","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_layout.styl","hash":"fa4fd8f76464e214fb7318f325b13c2b62f4b478","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/toggles.styl","hash":"782ee1fc5e669d3ddbfeb82b73ad7fe561f1a4fb","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_header.styl","hash":"3fbfab591f280e2e7f3b0265901c93bc4bd137ed","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Gemini/index.styl","hash":"9dfe853c901bdc52fc950bacdf15484dbb9bf140","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_posts-expand.styl","hash":"485d23ccb42c0d0c8ead7ea8930dd3e06d79a285","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_menu.styl","hash":"fb550935d374e0bdf1097fce187337dc05cad3e1","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_layout.styl","hash":"6569a6640f79d247a8235b3914772c0e2f99ead2","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_header.styl","hash":"ac2dc0ce9c775a83ef7132ae957b54539366ac9c","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_layout.styl","hash":"26a0cba1eee5de45a45a5e14e17707f905390512","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_menu.styl","hash":"82cda756f5b7092df2eee6641b9786df71623bdb","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_sidebar.styl","hash":"547c0b5cd5e7ea10d21863d13a6b16579a49396c","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_menu.styl","hash":"72dc825c50357402c342d62ab60fc0c478ab6bc1","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_sidebar.styl","hash":"91dbf3ca5c3a613d4e30618c120da535bf2d0336","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/analytics/google-analytics.js","hash":"def07bcc7c17d8a0caad177fb1dd2f3a5e5b3536","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/comments/disqus.js","hash":"da361917d65e5dca8362f8cdeb6c8cc0e8316cec","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/comments/disqusjs.js","hash":"1e826dea3f684c0515f362dc1352447a1f0eae71","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/statistics/firestore.js","hash":"6e0682bb42170d61b13b786295f45f9c785f8b73","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/tags/mermaid.js","hash":"6bf821310342c5b87a631873e7650a475a0765f1","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/tags/wavedrom.js","hash":"40dcd10df6edf124088c329346e0cc0bdac74ef1","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/index.styl","hash":"098d4bd034e986fcf7e443eac4fc2193935461b7","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-body.styl","hash":"56d5b7ff73f466c9ae54f7204ae899281295d749","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-collapse.styl","hash":"7369928305330c73ae0b3f063a681a8384d8fde4","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-footer.styl","hash":"11497388f124bfbb4001495a67d3629a9f618405","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-followme.styl","hash":"1ecfd64507954810b07a9d21fb5305b5378feda0","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f634f94828620e88c3f5a8db56f7944f6ba232b0","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-header.styl","hash":"1191f1bfa5c43e54be8e5b3cc0d802984e161747","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/highlight/fold.styl","hash":"42a0b65491ad85438596b3fe0b7f23973e4cef34","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/highlight/index.styl","hash":"138f78147bc6bd6005f329ada34dc79b7625542d","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/footer/index.styl","hash":"4e967702cf4c637132346bc74ec8854426f1a68c","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/disqusjs.styl","hash":"877a537d5b95beb048142e4fdee6f17e6ef9c7bb","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/gitalk.styl","hash":"8f094c4ac17e2ab45569b12d157747f9c7333c12","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-reward.styl","hash":"04cf4a69537fc14d3b8904f965d283356853847f","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-widgets.styl","hash":"ebfba158a0a4af3d1dabcacbc58986664de52140","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/search.styl","hash":"e72799ce3f9b79753e365b2f8c8ef6c310668d4a","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/index.styl","hash":"54d12e2c5d9982f7b9e5b23be5133954a8514e9d","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"d6418fd2bbfba7b73ddf11ec62db9637fdf5d8af","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/math.styl","hash":"9d995eb4871a6c273d9d51558676a1fdabf69e72","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/utterances.styl","hash":"56d90ae0559caa55b75f3c300ff2711f9ed65fc4","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/index.styl","hash":"22cd37bd5df9972d5074710896aba4424ad5161c","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7f8a7345e6537a62cd9e9a94c8f7065b541d9b04","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/mermaid.styl","hash":"48d35dba575a7c9e8845b16652e76b7d4a4646de","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/wavedrom.styl","hash":"af113411ad9cca7674177be36af8dd399680834d","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/tabs.styl","hash":"33dd6ad015dde65fd46f34961655442e8e82b52e","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/note.styl","hash":"98d4c20aff0f0fcfe1824017fb06ab21ef0d218e","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/pdf.styl","hash":"b6654a1d7cf82577d8263faffee8af3ad4a5c0e8","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/header/github-banner.styl","hash":"38c64c2d04e46848382bfa246a0e9c508294767b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/header/index.styl","hash":"6e0d0796ef7fbbb62ffdfb448753a850de82c74f","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/related-posts.styl","hash":"b05908f04ef95f2d91e6eba89b12411c378d050f","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/header/bookmark.styl","hash":"e74f4bb47a101b014ee2a1783c87f3b87323f9a0","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/header/menu.styl","hash":"bbbc40b03cb299d2a6a568f329b2ce98e1cdc430","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/header/site-meta.styl","hash":"a851e9d5aefcd027c95eeb323860b6da70f202d1","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/index.styl","hash":"da5e88f8debd5ac8d7af5c6ba6240df66104955f","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"0847400d8579b0a2dd1bf662c78954c10adf2680","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"46eece42510c2c89bb9209afb0262ad76a4b0b36","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"c6a27beb3f741211a14576026f3b4cfc44cc6407","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"24752d145c6fb8f5344dca9c7b9640839c02e009","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"c2e354a565c8c1b32bd0ceacc972b17982758b67","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"9a7c71560fbdc936ad4e736fe15063ea3e8a644b","modified":1709548310000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/site-state.styl","hash":"26dd0adfcb1db6df29c6090c8d7e9b5a43583fb0","modified":1709548310000},{"_id":"public/tags/index.html","hash":"fd5efd7b0501795fbd4c78c74a98b051eaeef242","modified":1711288628516},{"_id":"public/tags2/index.html","hash":"af796943e427a20d906e6e542c6217b0070c81eb","modified":1711288628516},{"_id":"public/upload/index.html","hash":"b16bfd1d7228ebac235c72a424bb64843b23e344","modified":1711288628516},{"_id":"public/archives/index.html","hash":"91d15369a9bf68e1d73e9c88dc417d8a99ac6a48","modified":1711288628516},{"_id":"public/archives/2024/03/index.html","hash":"42b1290b3f4ffd96d3e55a9c7a0cab596cad66ad","modified":1711288628516},{"_id":"public/archives/2024/index.html","hash":"08ffbc406acb3007f67289fd17e1f43ee986240e","modified":1711288628516},{"_id":"public/tags/tags2/index.html","hash":"851f9975ac6501de2e94ed5d3751109edfc402d9","modified":1711288628516},{"_id":"public/2024/03/22/C++test.nd/index.html","hash":"6250b02b950a404c603b875bbde5ac1297f742dc","modified":1711288628516},{"_id":"public/2024/03/22/hello-world/index.html","hash":"240c512ee82025bcd2bb20806151ccda000960fc","modified":1711288628516},{"_id":"public/index.html","hash":"7da5b619ddcd55db781fb01264d8808bf4b121ec","modified":1711288628516},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1711288628516},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1711288628516},{"_id":"public/upload/avatar.gif","hash":"2a5c54d54e5006e4179a9036e8e06c03e7afcbe6","modified":1711288628516},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1711288628516},{"_id":"public/images/avatar.gif","hash":"2a5c54d54e5006e4179a9036e8e06c03e7afcbe6","modified":1711288628516},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1711288628516},{"_id":"public/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1711288628516},{"_id":"public/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1711288628516},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1711288628516},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1711288628516},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1711288628516},{"_id":"public/js/motion.js","hash":"770d63c26f22705311028a36b52e999cc8a2da82","modified":1711288628516},{"_id":"public/css/noscript.css","hash":"4cd5301e478e0e0d4b176740ec314087ec5cb707","modified":1711288628516},{"_id":"public/js/next-boot.js","hash":"745bd828205da7e5fbd3f860cc3697097630f5f3","modified":1711288628516},{"_id":"public/js/schemes/muse.js","hash":"ba7ba2c129d1f240c6a22cec3e53f3f22af64b6b","modified":1711288628516},{"_id":"public/js/third-party/addtoany.js","hash":"5276c8f78ee562a8965216dc67d762e59cb4a9f2","modified":1711288628516},{"_id":"public/js/third-party/fancybox.js","hash":"819f382c561fe5ec23c67cc5fabd63dd1cc22dc1","modified":1711288628516},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1711288628516},{"_id":"public/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1711288628516},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"def07bcc7c17d8a0caad177fb1dd2f3a5e5b3536","modified":1711288628516},{"_id":"public/js/pjax.js","hash":"b03ba78c6916ad2f390d55bc1bc18fafb64b0ebf","modified":1711288628516},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1711288628516},{"_id":"public/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1711288628516},{"_id":"public/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1711288628516},{"_id":"public/js/third-party/comments/disqus.js","hash":"da361917d65e5dca8362f8cdeb6c8cc0e8316cec","modified":1711288628516},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1711288628516},{"_id":"public/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1711288628516},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1711288628516},{"_id":"public/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1711288628516},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1711288628516},{"_id":"public/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1711288628516},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"1e826dea3f684c0515f362dc1352447a1f0eae71","modified":1711288628516},{"_id":"public/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1711288628516},{"_id":"public/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1711288628516},{"_id":"public/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1711288628516},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1711288628516},{"_id":"public/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1711288628516},{"_id":"public/js/third-party/tags/mermaid.js","hash":"6bf821310342c5b87a631873e7650a475a0765f1","modified":1711288628516},{"_id":"public/js/third-party/statistics/firestore.js","hash":"6e0682bb42170d61b13b786295f45f9c785f8b73","modified":1711288628516},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1711288628516},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1711288628516},{"_id":"public/js/third-party/tags/wavedrom.js","hash":"40dcd10df6edf124088c329346e0cc0bdac74ef1","modified":1711288628516},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1711288628516},{"_id":"public/css/main.css","hash":"1323f86c38a3aad82121411037d58f37c9fd9eff","modified":1711288628516},{"_id":"public/js/utils.js","hash":"5d67bfebae41ec947b9b83be2ff63488580c31ed","modified":1711288628516}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2024-03-22T04:46:22.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2024-03-22 12:46:22\ntype: \"tags\"\n---\n","updated":"2024-03-22T09:20:11.055Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clu5l2ctv0000vcujg36t7dtq","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags2","date":"2024-03-22T09:21:28.000Z","type":"tags","_content":"","source":"tags2/index.md","raw":"---\ntitle: tags2\ndate: 2024-03-22 17:21:28\ntype: \"tags\"\n---\n","updated":"2024-03-22T09:21:41.919Z","path":"tags2/index.html","comments":1,"layout":"page","_id":"clu5l2ctz0002vcujee9w8ouz","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"upload","date":"2024-03-24T13:52:19.000Z","_content":"","source":"upload/index.md","raw":"---\ntitle: upload\ndate: 2024-03-24 21:52:19\n---\n","updated":"2024-03-24T13:53:23.570Z","path":"upload/index.html","comments":1,"layout":"page","_id":"clu5l2cu10005vcuj5n18hqiq","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"2Hello World","top":111111,"menu":123,"_content":"# C++学习 之 成员初始化列表\n\n&emsp;&emsp;在类中，我们经常使用构造函数去初始化我们的成员变量以及进行一系列初始化操作，比如这样：\n```C++\nclass Entity\n{\n    public:\n        int m_X,m_Y;\n        std::string m_Name;\n    public:\n        Entity()\n        {\n\n        }\n        Entity(std::string& name)\n        {\n            int m_X = 1;\n            int m_Y = 1;\n            m_Name = name;\n        }\n}\nint main()\n{\n    Entity e(\"LSJ\");\n    std::cout<< e.m_Name <<endl;\n}\n```\n&emsp;&emsp;我们也可以使用另一种初始化方法，那就是成员初始化列表，方法如下：\n```C++\nclass Entity\n{\n    public:\n        int m_X,m_Y;\n        std::string m_Name;\n    public:\n        Entity()\n        {\n\n        }\n        Entity(std::string& name)\n            :m_X(1),m_Y(1),m_Name(name)//just like this\n        {\n        }\n}\n```\n&emsp;&emsp;显然，我们在这样做的时候必须遵守成员变量声明的顺序进行初始化，以防止出现任何意外的错误。那么，这样的方法除了能让初始化变量与初始化处理等一系列操作从代码里分离方便阅读，还有什么其他的优点？\n&emsp;&emsp;事实上，在C++类的其他类类型的成员声明的时候，会为类类型的成员主动地进行初始化，在构造函数中又会再次为这个已经初始化的类类型赋值，这样会造成性能上的损耗。比如用下面的方法去做：\n```C++\nclass NewClass\n{\npublic:\n\tint m_X;\npublic:\n\tNewClass()\n\t{\n\t\tFDF::print(\"number is created\");\n        //这里使用的FDF命名空间是我自己定义的头文件中的\n        //实际使用起来的效果和cout输出流没有太大区别，本身也是把cout封装实现的效果\n\t}\n\tNewClass(const int& number)\n\t{\n\t\tm_X = number;\n\t\tFDF::print(\"number is created with\",number);\n\t}\n};\nclass Entity\n{\n    public:\n        NewCLass m_Member;\n        int m_X;\n    public:\n        Entity(){}\n        Entity(const int number)\n        {\n            m_Member = NewClass(8);\n            m_X = 0;\n        }\n}\nint main()\n{\n    Entity e(8);\n}\n```\n&emsp;&emsp;上述代码就会同时出现内容\"number is created\"和内容\"number is created with 8\"，这意味着m_Member被初始化了两次，而通过初始化成员列表的方法就不会出现这样的重复初始化的情况。\n&emsp;&emsp;所以我们在写构造函数的时候最好应该使用初始化成员列表，虽然有时候重复初始化的情况不一定发生(当成员变量都是基础类型的时候就不会重复初始化)，但是最好还是防患于未然，使用如下的构造函数写法：\n```C++\nclass Entity\n{\n    public:\n        NewCLass m_Member;\n        int m_X;\n    public:\n        Entity(){}\n        Entity(const int number)\n            :m_Member(8),m_X(1)\n        {\n        }\n}\n```\n","source":"_posts/hello-world.md","raw":"---\ntitle: 2Hello World\ntop: 111111\nmenu: 123\ntags: \n\t- tags2\n---\n# C++学习 之 成员初始化列表\n\n&emsp;&emsp;在类中，我们经常使用构造函数去初始化我们的成员变量以及进行一系列初始化操作，比如这样：\n```C++\nclass Entity\n{\n    public:\n        int m_X,m_Y;\n        std::string m_Name;\n    public:\n        Entity()\n        {\n\n        }\n        Entity(std::string& name)\n        {\n            int m_X = 1;\n            int m_Y = 1;\n            m_Name = name;\n        }\n}\nint main()\n{\n    Entity e(\"LSJ\");\n    std::cout<< e.m_Name <<endl;\n}\n```\n&emsp;&emsp;我们也可以使用另一种初始化方法，那就是成员初始化列表，方法如下：\n```C++\nclass Entity\n{\n    public:\n        int m_X,m_Y;\n        std::string m_Name;\n    public:\n        Entity()\n        {\n\n        }\n        Entity(std::string& name)\n            :m_X(1),m_Y(1),m_Name(name)//just like this\n        {\n        }\n}\n```\n&emsp;&emsp;显然，我们在这样做的时候必须遵守成员变量声明的顺序进行初始化，以防止出现任何意外的错误。那么，这样的方法除了能让初始化变量与初始化处理等一系列操作从代码里分离方便阅读，还有什么其他的优点？\n&emsp;&emsp;事实上，在C++类的其他类类型的成员声明的时候，会为类类型的成员主动地进行初始化，在构造函数中又会再次为这个已经初始化的类类型赋值，这样会造成性能上的损耗。比如用下面的方法去做：\n```C++\nclass NewClass\n{\npublic:\n\tint m_X;\npublic:\n\tNewClass()\n\t{\n\t\tFDF::print(\"number is created\");\n        //这里使用的FDF命名空间是我自己定义的头文件中的\n        //实际使用起来的效果和cout输出流没有太大区别，本身也是把cout封装实现的效果\n\t}\n\tNewClass(const int& number)\n\t{\n\t\tm_X = number;\n\t\tFDF::print(\"number is created with\",number);\n\t}\n};\nclass Entity\n{\n    public:\n        NewCLass m_Member;\n        int m_X;\n    public:\n        Entity(){}\n        Entity(const int number)\n        {\n            m_Member = NewClass(8);\n            m_X = 0;\n        }\n}\nint main()\n{\n    Entity e(8);\n}\n```\n&emsp;&emsp;上述代码就会同时出现内容\"number is created\"和内容\"number is created with 8\"，这意味着m_Member被初始化了两次，而通过初始化成员列表的方法就不会出现这样的重复初始化的情况。\n&emsp;&emsp;所以我们在写构造函数的时候最好应该使用初始化成员列表，虽然有时候重复初始化的情况不一定发生(当成员变量都是基础类型的时候就不会重复初始化)，但是最好还是防患于未然，使用如下的构造函数写法：\n```C++\nclass Entity\n{\n    public:\n        NewCLass m_Member;\n        int m_X;\n    public:\n        Entity(){}\n        Entity(const int number)\n            :m_Member(8),m_X(1)\n        {\n        }\n}\n```\n","slug":"hello-world","published":1,"date":"2024-03-22T13:26:37.982Z","updated":"2024-03-24T10:17:44.264Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clu5l2ctx0001vcuj3td9fi8c","content":"<h1 id=\"C-学习-之-成员初始化列表\"><a href=\"#C-学习-之-成员初始化列表\" class=\"headerlink\" title=\"C++学习 之 成员初始化列表\"></a>C++学习 之 成员初始化列表</h1><p>&emsp;&emsp;在类中，我们经常使用构造函数去初始化我们的成员变量以及进行一系列初始化操作，比如这样：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entity</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"type\">int</span> m_X,m_Y;</span><br><span class=\"line\">        std::string m_Name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>(std::string&amp; name)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> m_X = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> m_Y = <span class=\"number\">1</span>;</span><br><span class=\"line\">            m_Name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Entity <span class=\"title\">e</span><span class=\"params\">(<span class=\"string\">&quot;LSJ&quot;</span>)</span></span>;</span><br><span class=\"line\">    std::cout&lt;&lt; e.m_Name &lt;&lt;endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;我们也可以使用另一种初始化方法，那就是成员初始化列表，方法如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entity</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"type\">int</span> m_X,m_Y;</span><br><span class=\"line\">        std::string m_Name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>(std::string&amp; name)</span><br><span class=\"line\">            :<span class=\"built_in\">m_X</span>(<span class=\"number\">1</span>),<span class=\"built_in\">m_Y</span>(<span class=\"number\">1</span>),<span class=\"built_in\">m_Name</span>(name)<span class=\"comment\">//just like this</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;显然，我们在这样做的时候必须遵守成员变量声明的顺序进行初始化，以防止出现任何意外的错误。那么，这样的方法除了能让初始化变量与初始化处理等一系列操作从代码里分离方便阅读，还有什么其他的优点？<br>&emsp;&emsp;事实上，在C++类的其他类类型的成员声明的时候，会为类类型的成员主动地进行初始化，在构造函数中又会再次为这个已经初始化的类类型赋值，这样会造成性能上的损耗。比如用下面的方法去做：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">NewClass</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"type\">int</span> m_X;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">NewClass</span>()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tFDF::<span class=\"built_in\">print</span>(<span class=\"string\">&quot;number is created&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//这里使用的FDF命名空间是我自己定义的头文件中的</span></span><br><span class=\"line\">        <span class=\"comment\">//实际使用起来的效果和cout输出流没有太大区别，本身也是把cout封装实现的效果</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">NewClass</span>(<span class=\"type\">const</span> <span class=\"type\">int</span>&amp; number)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tm_X = number;</span><br><span class=\"line\">\t\tFDF::<span class=\"built_in\">print</span>(<span class=\"string\">&quot;number is created with&quot;</span>,number);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entity</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        NewCLass m_Member;</span><br><span class=\"line\">        <span class=\"type\">int</span> m_X;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>()&#123;&#125;</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>(<span class=\"type\">const</span> <span class=\"type\">int</span> number)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m_Member = <span class=\"built_in\">NewClass</span>(<span class=\"number\">8</span>);</span><br><span class=\"line\">            m_X = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Entity <span class=\"title\">e</span><span class=\"params\">(<span class=\"number\">8</span>)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;上述代码就会同时出现内容”number is created”和内容”number is created with 8”，这意味着m_Member被初始化了两次，而通过初始化成员列表的方法就不会出现这样的重复初始化的情况。<br>&emsp;&emsp;所以我们在写构造函数的时候最好应该使用初始化成员列表，虽然有时候重复初始化的情况不一定发生(当成员变量都是基础类型的时候就不会重复初始化)，但是最好还是防患于未然，使用如下的构造函数写法：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entity</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        NewCLass m_Member;</span><br><span class=\"line\">        <span class=\"type\">int</span> m_X;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>()&#123;&#125;</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>(<span class=\"type\">const</span> <span class=\"type\">int</span> number)</span><br><span class=\"line\">            :<span class=\"built_in\">m_Member</span>(<span class=\"number\">8</span>),<span class=\"built_in\">m_X</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"C-学习-之-成员初始化列表\"><a href=\"#C-学习-之-成员初始化列表\" class=\"headerlink\" title=\"C++学习 之 成员初始化列表\"></a>C++学习 之 成员初始化列表</h1><p>&emsp;&emsp;在类中，我们经常使用构造函数去初始化我们的成员变量以及进行一系列初始化操作，比如这样：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entity</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"type\">int</span> m_X,m_Y;</span><br><span class=\"line\">        std::string m_Name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>(std::string&amp; name)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> m_X = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> m_Y = <span class=\"number\">1</span>;</span><br><span class=\"line\">            m_Name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Entity <span class=\"title\">e</span><span class=\"params\">(<span class=\"string\">&quot;LSJ&quot;</span>)</span></span>;</span><br><span class=\"line\">    std::cout&lt;&lt; e.m_Name &lt;&lt;endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;我们也可以使用另一种初始化方法，那就是成员初始化列表，方法如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entity</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"type\">int</span> m_X,m_Y;</span><br><span class=\"line\">        std::string m_Name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>(std::string&amp; name)</span><br><span class=\"line\">            :<span class=\"built_in\">m_X</span>(<span class=\"number\">1</span>),<span class=\"built_in\">m_Y</span>(<span class=\"number\">1</span>),<span class=\"built_in\">m_Name</span>(name)<span class=\"comment\">//just like this</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;显然，我们在这样做的时候必须遵守成员变量声明的顺序进行初始化，以防止出现任何意外的错误。那么，这样的方法除了能让初始化变量与初始化处理等一系列操作从代码里分离方便阅读，还有什么其他的优点？<br>&emsp;&emsp;事实上，在C++类的其他类类型的成员声明的时候，会为类类型的成员主动地进行初始化，在构造函数中又会再次为这个已经初始化的类类型赋值，这样会造成性能上的损耗。比如用下面的方法去做：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">NewClass</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"type\">int</span> m_X;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">NewClass</span>()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tFDF::<span class=\"built_in\">print</span>(<span class=\"string\">&quot;number is created&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//这里使用的FDF命名空间是我自己定义的头文件中的</span></span><br><span class=\"line\">        <span class=\"comment\">//实际使用起来的效果和cout输出流没有太大区别，本身也是把cout封装实现的效果</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">NewClass</span>(<span class=\"type\">const</span> <span class=\"type\">int</span>&amp; number)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tm_X = number;</span><br><span class=\"line\">\t\tFDF::<span class=\"built_in\">print</span>(<span class=\"string\">&quot;number is created with&quot;</span>,number);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entity</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        NewCLass m_Member;</span><br><span class=\"line\">        <span class=\"type\">int</span> m_X;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>()&#123;&#125;</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>(<span class=\"type\">const</span> <span class=\"type\">int</span> number)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m_Member = <span class=\"built_in\">NewClass</span>(<span class=\"number\">8</span>);</span><br><span class=\"line\">            m_X = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Entity <span class=\"title\">e</span><span class=\"params\">(<span class=\"number\">8</span>)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;上述代码就会同时出现内容”number is created”和内容”number is created with 8”，这意味着m_Member被初始化了两次，而通过初始化成员列表的方法就不会出现这样的重复初始化的情况。<br>&emsp;&emsp;所以我们在写构造函数的时候最好应该使用初始化成员列表，虽然有时候重复初始化的情况不一定发生(当成员变量都是基础类型的时候就不会重复初始化)，但是最好还是防患于未然，使用如下的构造函数写法：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entity</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        NewCLass m_Member;</span><br><span class=\"line\">        <span class=\"type\">int</span> m_X;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>()&#123;&#125;</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>(<span class=\"type\">const</span> <span class=\"type\">int</span> number)</span><br><span class=\"line\">            :<span class=\"built_in\">m_Member</span>(<span class=\"number\">8</span>),<span class=\"built_in\">m_X</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"1C++2.0","top":2000,"menu":1244,"_content":"# C++学习 之 成员初始化列表\n\n&emsp;&emsp;在类中，我们经常使用构造函数去初始化我们的成员变量以及进行一系列初始化操作，比如这样：\n```C++\nclass Entity\n{\n    public:\n        int m_X,m_Y;\n        std::string m_Name;\n    public:\n        Entity()\n        {\n\n        }\n        Entity(std::string& name)\n        {\n            int m_X = 1;\n            int m_Y = 1;\n            m_Name = name;\n        }\n}\nint main()\n{\n    Entity e(\"LSJ\");\n    std::cout<< e.m_Name <<endl;\n}\n```\n&emsp;&emsp;我们也可以使用另一种初始化方法，那就是成员初始化列表，方法如下：\n```C++\nclass Entity\n{\n    public:\n        int m_X,m_Y;\n        std::string m_Name;\n    public:\n        Entity()\n        {\n\n        }\n        Entity(std::string& name)\n            :m_X(1),m_Y(1),m_Name(name)//just like this\n        {\n        }\n}\n```\n&emsp;&emsp;显然，我们在这样做的时候必须遵守成员变量声明的顺序进行初始化，以防止出现任何意外的错误。那么，这样的方法除了能让初始化变量与初始化处理等一系列操作从代码里分离方便阅读，还有什么其他的优点？\n&emsp;&emsp;事实上，在C++类的其他类类型的成员声明的时候，会为类类型的成员主动地进行初始化，在构造函数中又会再次为这个已经初始化的类类型赋值，这样会造成性能上的损耗。比如用下面的方法去做：\n```C++\nclass NewClass\n{\npublic:\n\tint m_X;\npublic:\n\tNewClass()\n\t{\n\t\tFDF::print(\"number is created\");\n        //这里使用的FDF命名空间是我自己定义的头文件中的\n        //实际使用起来的效果和cout输出流没有太大区别，本身也是把cout封装实现的效果\n\t}\n\tNewClass(const int& number)\n\t{\n\t\tm_X = number;\n\t\tFDF::print(\"number is created with\",number);\n\t}\n};\nclass Entity\n{\n    public:\n        NewCLass m_Member;\n        int m_X;\n    public:\n        Entity(){}\n        Entity(const int number)\n        {\n            m_Member = NewClass(8);\n            m_X = 0;\n        }\n}\nint main()\n{\n    Entity e(8);\n}\n```\n&emsp;&emsp;上述代码就会同时出现内容\"number is created\"和内容\"number is created with 8\"，这意味着m_Member被初始化了两次，而通过初始化成员列表的方法就不会出现这样的重复初始化的情况。\n&emsp;&emsp;所以我们在写构造函数的时候最好应该使用初始化成员列表，虽然有时候重复初始化的情况不一定发生(当成员变量都是基础类型的时候就不会重复初始化)，但是最好还是防患于未然，使用如下的构造函数写法：\n```C++\nclass Entity\n{\n    public:\n        NewCLass m_Member;\n        int m_X;\n    public:\n        Entity(){}\n        Entity(const int number)\n            :m_Member(8),m_X(1)\n        {\n        }\n}\n```","source":"_posts/C++test.nd.md","raw":"---\ntitle: 1C++2.0\ntop: 2000\nmenu: 1244\ntags:\n    - tags2\n---\n# C++学习 之 成员初始化列表\n\n&emsp;&emsp;在类中，我们经常使用构造函数去初始化我们的成员变量以及进行一系列初始化操作，比如这样：\n```C++\nclass Entity\n{\n    public:\n        int m_X,m_Y;\n        std::string m_Name;\n    public:\n        Entity()\n        {\n\n        }\n        Entity(std::string& name)\n        {\n            int m_X = 1;\n            int m_Y = 1;\n            m_Name = name;\n        }\n}\nint main()\n{\n    Entity e(\"LSJ\");\n    std::cout<< e.m_Name <<endl;\n}\n```\n&emsp;&emsp;我们也可以使用另一种初始化方法，那就是成员初始化列表，方法如下：\n```C++\nclass Entity\n{\n    public:\n        int m_X,m_Y;\n        std::string m_Name;\n    public:\n        Entity()\n        {\n\n        }\n        Entity(std::string& name)\n            :m_X(1),m_Y(1),m_Name(name)//just like this\n        {\n        }\n}\n```\n&emsp;&emsp;显然，我们在这样做的时候必须遵守成员变量声明的顺序进行初始化，以防止出现任何意外的错误。那么，这样的方法除了能让初始化变量与初始化处理等一系列操作从代码里分离方便阅读，还有什么其他的优点？\n&emsp;&emsp;事实上，在C++类的其他类类型的成员声明的时候，会为类类型的成员主动地进行初始化，在构造函数中又会再次为这个已经初始化的类类型赋值，这样会造成性能上的损耗。比如用下面的方法去做：\n```C++\nclass NewClass\n{\npublic:\n\tint m_X;\npublic:\n\tNewClass()\n\t{\n\t\tFDF::print(\"number is created\");\n        //这里使用的FDF命名空间是我自己定义的头文件中的\n        //实际使用起来的效果和cout输出流没有太大区别，本身也是把cout封装实现的效果\n\t}\n\tNewClass(const int& number)\n\t{\n\t\tm_X = number;\n\t\tFDF::print(\"number is created with\",number);\n\t}\n};\nclass Entity\n{\n    public:\n        NewCLass m_Member;\n        int m_X;\n    public:\n        Entity(){}\n        Entity(const int number)\n        {\n            m_Member = NewClass(8);\n            m_X = 0;\n        }\n}\nint main()\n{\n    Entity e(8);\n}\n```\n&emsp;&emsp;上述代码就会同时出现内容\"number is created\"和内容\"number is created with 8\"，这意味着m_Member被初始化了两次，而通过初始化成员列表的方法就不会出现这样的重复初始化的情况。\n&emsp;&emsp;所以我们在写构造函数的时候最好应该使用初始化成员列表，虽然有时候重复初始化的情况不一定发生(当成员变量都是基础类型的时候就不会重复初始化)，但是最好还是防患于未然，使用如下的构造函数写法：\n```C++\nclass Entity\n{\n    public:\n        NewCLass m_Member;\n        int m_X;\n    public:\n        Entity(){}\n        Entity(const int number)\n            :m_Member(8),m_X(1)\n        {\n        }\n}\n```","slug":"C++test.nd","published":1,"date":"2024-03-22T09:20:31.979Z","updated":"2024-03-24T10:17:00.510Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clu5l2ctz0003vcujcujb1vab","content":"<h1 id=\"C-学习-之-成员初始化列表\"><a href=\"#C-学习-之-成员初始化列表\" class=\"headerlink\" title=\"C++学习 之 成员初始化列表\"></a>C++学习 之 成员初始化列表</h1><p>&emsp;&emsp;在类中，我们经常使用构造函数去初始化我们的成员变量以及进行一系列初始化操作，比如这样：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entity</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"type\">int</span> m_X,m_Y;</span><br><span class=\"line\">        std::string m_Name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>(std::string&amp; name)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> m_X = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> m_Y = <span class=\"number\">1</span>;</span><br><span class=\"line\">            m_Name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Entity <span class=\"title\">e</span><span class=\"params\">(<span class=\"string\">&quot;LSJ&quot;</span>)</span></span>;</span><br><span class=\"line\">    std::cout&lt;&lt; e.m_Name &lt;&lt;endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;我们也可以使用另一种初始化方法，那就是成员初始化列表，方法如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entity</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"type\">int</span> m_X,m_Y;</span><br><span class=\"line\">        std::string m_Name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>(std::string&amp; name)</span><br><span class=\"line\">            :<span class=\"built_in\">m_X</span>(<span class=\"number\">1</span>),<span class=\"built_in\">m_Y</span>(<span class=\"number\">1</span>),<span class=\"built_in\">m_Name</span>(name)<span class=\"comment\">//just like this</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;显然，我们在这样做的时候必须遵守成员变量声明的顺序进行初始化，以防止出现任何意外的错误。那么，这样的方法除了能让初始化变量与初始化处理等一系列操作从代码里分离方便阅读，还有什么其他的优点？<br>&emsp;&emsp;事实上，在C++类的其他类类型的成员声明的时候，会为类类型的成员主动地进行初始化，在构造函数中又会再次为这个已经初始化的类类型赋值，这样会造成性能上的损耗。比如用下面的方法去做：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">NewClass</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"type\">int</span> m_X;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">NewClass</span>()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tFDF::<span class=\"built_in\">print</span>(<span class=\"string\">&quot;number is created&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//这里使用的FDF命名空间是我自己定义的头文件中的</span></span><br><span class=\"line\">        <span class=\"comment\">//实际使用起来的效果和cout输出流没有太大区别，本身也是把cout封装实现的效果</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">NewClass</span>(<span class=\"type\">const</span> <span class=\"type\">int</span>&amp; number)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tm_X = number;</span><br><span class=\"line\">\t\tFDF::<span class=\"built_in\">print</span>(<span class=\"string\">&quot;number is created with&quot;</span>,number);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entity</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        NewCLass m_Member;</span><br><span class=\"line\">        <span class=\"type\">int</span> m_X;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>()&#123;&#125;</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>(<span class=\"type\">const</span> <span class=\"type\">int</span> number)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m_Member = <span class=\"built_in\">NewClass</span>(<span class=\"number\">8</span>);</span><br><span class=\"line\">            m_X = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Entity <span class=\"title\">e</span><span class=\"params\">(<span class=\"number\">8</span>)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;上述代码就会同时出现内容”number is created”和内容”number is created with 8”，这意味着m_Member被初始化了两次，而通过初始化成员列表的方法就不会出现这样的重复初始化的情况。<br>&emsp;&emsp;所以我们在写构造函数的时候最好应该使用初始化成员列表，虽然有时候重复初始化的情况不一定发生(当成员变量都是基础类型的时候就不会重复初始化)，但是最好还是防患于未然，使用如下的构造函数写法：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entity</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        NewCLass m_Member;</span><br><span class=\"line\">        <span class=\"type\">int</span> m_X;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>()&#123;&#125;</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>(<span class=\"type\">const</span> <span class=\"type\">int</span> number)</span><br><span class=\"line\">            :<span class=\"built_in\">m_Member</span>(<span class=\"number\">8</span>),<span class=\"built_in\">m_X</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"C-学习-之-成员初始化列表\"><a href=\"#C-学习-之-成员初始化列表\" class=\"headerlink\" title=\"C++学习 之 成员初始化列表\"></a>C++学习 之 成员初始化列表</h1><p>&emsp;&emsp;在类中，我们经常使用构造函数去初始化我们的成员变量以及进行一系列初始化操作，比如这样：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entity</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"type\">int</span> m_X,m_Y;</span><br><span class=\"line\">        std::string m_Name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>(std::string&amp; name)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> m_X = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> m_Y = <span class=\"number\">1</span>;</span><br><span class=\"line\">            m_Name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Entity <span class=\"title\">e</span><span class=\"params\">(<span class=\"string\">&quot;LSJ&quot;</span>)</span></span>;</span><br><span class=\"line\">    std::cout&lt;&lt; e.m_Name &lt;&lt;endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;我们也可以使用另一种初始化方法，那就是成员初始化列表，方法如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entity</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"type\">int</span> m_X,m_Y;</span><br><span class=\"line\">        std::string m_Name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>(std::string&amp; name)</span><br><span class=\"line\">            :<span class=\"built_in\">m_X</span>(<span class=\"number\">1</span>),<span class=\"built_in\">m_Y</span>(<span class=\"number\">1</span>),<span class=\"built_in\">m_Name</span>(name)<span class=\"comment\">//just like this</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;显然，我们在这样做的时候必须遵守成员变量声明的顺序进行初始化，以防止出现任何意外的错误。那么，这样的方法除了能让初始化变量与初始化处理等一系列操作从代码里分离方便阅读，还有什么其他的优点？<br>&emsp;&emsp;事实上，在C++类的其他类类型的成员声明的时候，会为类类型的成员主动地进行初始化，在构造函数中又会再次为这个已经初始化的类类型赋值，这样会造成性能上的损耗。比如用下面的方法去做：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">NewClass</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"type\">int</span> m_X;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">NewClass</span>()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tFDF::<span class=\"built_in\">print</span>(<span class=\"string\">&quot;number is created&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//这里使用的FDF命名空间是我自己定义的头文件中的</span></span><br><span class=\"line\">        <span class=\"comment\">//实际使用起来的效果和cout输出流没有太大区别，本身也是把cout封装实现的效果</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">NewClass</span>(<span class=\"type\">const</span> <span class=\"type\">int</span>&amp; number)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tm_X = number;</span><br><span class=\"line\">\t\tFDF::<span class=\"built_in\">print</span>(<span class=\"string\">&quot;number is created with&quot;</span>,number);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entity</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        NewCLass m_Member;</span><br><span class=\"line\">        <span class=\"type\">int</span> m_X;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>()&#123;&#125;</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>(<span class=\"type\">const</span> <span class=\"type\">int</span> number)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m_Member = <span class=\"built_in\">NewClass</span>(<span class=\"number\">8</span>);</span><br><span class=\"line\">            m_X = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Entity <span class=\"title\">e</span><span class=\"params\">(<span class=\"number\">8</span>)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;上述代码就会同时出现内容”number is created”和内容”number is created with 8”，这意味着m_Member被初始化了两次，而通过初始化成员列表的方法就不会出现这样的重复初始化的情况。<br>&emsp;&emsp;所以我们在写构造函数的时候最好应该使用初始化成员列表，虽然有时候重复初始化的情况不一定发生(当成员变量都是基础类型的时候就不会重复初始化)，但是最好还是防患于未然，使用如下的构造函数写法：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entity</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        NewCLass m_Member;</span><br><span class=\"line\">        <span class=\"type\">int</span> m_X;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>()&#123;&#125;</span><br><span class=\"line\">        <span class=\"built_in\">Entity</span>(<span class=\"type\">const</span> <span class=\"type\">int</span> number)</span><br><span class=\"line\">            :<span class=\"built_in\">m_Member</span>(<span class=\"number\">8</span>),<span class=\"built_in\">m_X</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"clu5l2ctx0001vcuj3td9fi8c","tag_id":"clu5l2cu00004vcuj0ui98kpp","_id":"clu5l2cu30007vcuj0uxrbn2e"},{"post_id":"clu5l2ctz0003vcujcujb1vab","tag_id":"clu5l2cu00004vcuj0ui98kpp","_id":"clu5l2cu30008vcuj7yyw0uba"}],"Tag":[{"name":"tags2","_id":"clu5l2cu00004vcuj0ui98kpp"}]}}